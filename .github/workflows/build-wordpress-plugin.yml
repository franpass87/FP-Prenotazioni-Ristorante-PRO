name: Build WordPress Plugin

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      BUILD_DIR: build
      PLUGIN_SLUG: fp-prenotazioni-ristorante-pro

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Determine plugin metadata
      id: metadata
      run: |
        set -euo pipefail

        VERSION=$(awk -F': +' '/^[[:space:]]*\*?[[:space:]]*Version/{gsub(/\r/, "", $2); print $2; exit}' "${PLUGIN_SLUG}.php")
        echo "version=$VERSION" >> "$GITHUB_OUTPUT"
        echo "Plugin version: $VERSION"

        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          PACKAGE_NAME="${PLUGIN_SLUG}-${GITHUB_REF#refs/tags/}"
        else
          PACKAGE_NAME="${PLUGIN_SLUG}-v${VERSION}"
        fi

        echo "package_name=$PACKAGE_NAME" >> "$GITHUB_OUTPUT"
        echo "package_dir=${PLUGIN_SLUG}" >> "$GITHUB_OUTPUT"
        echo "Package directory: ${PLUGIN_SLUG} (zip: $PACKAGE_NAME)"

    - name: Stage plugin files
      run: |
        set -euo pipefail

        PACKAGE_PATH="${BUILD_DIR}/${PLUGIN_SLUG}"
        rm -rf "$PACKAGE_PATH"
        mkdir -p "$PACKAGE_PATH"

        rsync -a --prune-empty-dirs \
          --include='*/' \
          --include='${PLUGIN_SLUG}.php' \
          --include='fppr-brand.json' \
          --include='README.md' \
          --include='*.md' \
          --include='includes/***' \
          --include='assets/***' \
          --include='tests/***' \
          --include='docs/***' \
          --include='languages/***' \
          --exclude='*' \
          ./ "$PACKAGE_PATH/"

    - name: Create readme.txt for WordPress repository
      run: |
        cat > "${BUILD_DIR}/${PLUGIN_SLUG}/readme.txt" << 'EOF'
        === Prenotazioni Ristorante PRO ===
        Contributors: francescopasseri
        Tags: restaurant, booking, reservations, table, management
        Requires at least: 5.0
        Tested up to: 6.4
        Requires PHP: 7.4
        Stable tag: ${{ steps.metadata.outputs.version }}
        License: GPLv2 or later
        License URI: https://www.gnu.org/licenses/gpl-2.0.html
        
        Sistema completo di prenotazioni per ristoranti con calendario avanzato, notifiche email e tracking marketing.
        
        == Description ==
        
        Prenotazioni Ristorante PRO è un plugin WordPress completo per la gestione delle prenotazioni di ristoranti. 
        
        Caratteristiche principali:
        * 📅 Calendario avanzato con Flatpickr
        * 🌍 Supporto multilingua (IT/EN)
        * 📧 Notifiche email personalizzate
        * 📊 Tracking marketing GA4/Meta Pixel
        * 🎨 Giornate speciali a tema
        * 🔒 Sistema di sicurezza avanzato
        * 📱 Design responsive
        
        == Installation ==
        
        1. Carica la cartella del plugin in `/wp-content/plugins/`
        2. Attiva il plugin dal pannello WordPress
        3. Vai su "Prenotazioni" nel menu admin per configurare
        4. Inserisci `[ristorante_booking_form]` nella pagina desiderata
        
        == Frequently Asked Questions ==
        
        = Quali sono i requisiti minimi? =
        
        * WordPress 5.0+
        * PHP 7.4+
        * MySQL 5.7+
        * Memory 128MB+
        
        = Il plugin è compatibile con altri plugin? =
        
        Sì, è stato testato con i principali plugin di caching e sicurezza.
        
        == Changelog ==
        
        = 1.5 =
        * Release finale con architettura modulare completa
        * Sistema di tracking marketing avanzato
        * Sicurezza hardened con CSRF protection
        * Performance ottimizzate
        * Documentazione completa
        
        == Upgrade Notice ==
        
        = 1.5 =
        Versione stabile e completa. Aggiornamento raccomandato per tutti gli utenti.
        EOF
        
    - name: Validate plugin structure
      run: |
        cd "${BUILD_DIR}/${PLUGIN_SLUG}"

        echo "=== Plugin Structure ==="
        find . -type f -name "*.php" | head -10

        echo "=== Main Plugin File ==="
        if [ -f "fp-prenotazioni-ristorante-pro.php" ]; then
          echo "✅ Main plugin file exists"
          head -15 fp-prenotazioni-ristorante-pro.php
        else
          echo "❌ Main plugin file missing"
          exit 1
        fi
        
        echo "=== Required Directories ==="
        for dir in includes assets tests; do
          if [ -d "$dir" ]; then
            echo "✅ $dir directory exists ($(find $dir -name "*.php" | wc -l) PHP files)"
          else
            echo "⚠️  $dir directory missing"
          fi
        done

        echo "=== readme.txt ==="
        if [ -f "readme.txt" ]; then
          head -20 readme.txt
        else
          echo "❌ readme.txt missing"
          exit 1
        fi

    - name: Create WordPress plugin zip
      run: |
        set -euo pipefail

        cd "${BUILD_DIR}"
        zip -r "${{ steps.metadata.outputs.package_name }}.zip" "${PLUGIN_SLUG}/"
        cp "${{ steps.metadata.outputs.package_name }}.zip" "${PLUGIN_SLUG}-latest.zip"

        echo "=== Zip File Info ==="
        ls -lh "${{ steps.metadata.outputs.package_name }}.zip" "${PLUGIN_SLUG}-latest.zip"

        echo "=== Zip Contents (versioned) ==="
        unzip -l "${{ steps.metadata.outputs.package_name }}.zip" | head -20

    - name: Upload plugin artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.metadata.outputs.package_name }}
        path: build/${{ steps.metadata.outputs.package_name }}.zip
        retention-days: 30

    - name: Upload plugin artifact (latest)
      uses: actions/upload-artifact@v4
      with:
        name: fp-prenotazioni-ristorante-pro-latest
        path: build/fp-prenotazioni-ristorante-pro-latest.zip
        retention-days: 90

